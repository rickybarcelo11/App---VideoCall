{"ast":null,"code":"var _jsxFileName = \"E:\\\\Proyectos\\\\VideoCall\\\\frontend\\\\src\\\\pages\\\\VideoCall.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport socket from \"../socket\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VideoCall = () => {\n  _s();\n  const localVideoRef = useRef(null);\n  const remoteVideoRef = useRef(null);\n  const [users, setUsers] = useState([]);\n  const [peerConnection, setPeerConnection] = useState(null);\n  const [error, setError] = useState(null); // Estado para manejar errores\n\n  useEffect(() => {\n    async function startMedia() {\n      try {\n        console.log(\"🔄 Iniciando solicitud de acceso a cámara/micrófono...\");\n\n        // Verificar compatibilidad con WebRTC\n        if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n          console.error(\"❌ Este navegador no soporta acceso a la cámara/micrófono.\");\n          setError(\"Este navegador no soporta acceso a la cámara/micrófono.\");\n          return;\n        }\n\n        // Obtener acceso a la cámara y micrófono\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: true\n        });\n        if (localVideoRef.current) {\n          localVideoRef.current.srcObject = stream;\n        }\n        console.log(\"✅ Cámara y micrófono activados.\");\n\n        // Crear conexión WebRTC\n        const pc = new RTCPeerConnection({\n          iceServers: [{\n            urls: \"stun:stun.l.google.com:19302\"\n          }]\n        });\n        stream.getTracks().forEach(track => pc.addTrack(track, stream));\n        setPeerConnection(pc);\n\n        // Enviar candidatos ICE\n        pc.onicecandidate = event => {\n          if (event.candidate) {\n            console.log(\"📡 Enviando candidato ICE:\", event.candidate);\n            socket.emit(\"ice-candidate\", {\n              target: users[0],\n              candidate: event.candidate\n            });\n          }\n        };\n\n        // Recibir stream remoto\n        pc.ontrack = event => {\n          console.log(\"📡 Recibiendo stream remoto...\");\n          if (remoteVideoRef.current) {\n            remoteVideoRef.current.srcObject = event.streams[0];\n          }\n        };\n\n        // Manejar eventos de usuarios conectados\n        socket.on(\"users-list\", userList => {\n          console.log(\"👥 Usuarios conectados:\", userList);\n          setUsers(userList.filter(id => id !== socket.id));\n        });\n        socket.on(\"user-connected\", userId => {\n          console.log(\"🟢 Usuario conectado:\", userId);\n          setUsers(prev => [...prev, userId]);\n        });\n        socket.on(\"user-disconnected\", userId => {\n          console.log(\"🔴 Usuario desconectado:\", userId);\n          setUsers(prev => prev.filter(id => id !== userId));\n        });\n\n        // Manejar ofertas de WebRTC\n        socket.on(\"offer\", async ({\n          sender,\n          sdp\n        }) => {\n          console.log(\"📩 Recibida oferta de:\", sender);\n          if (!pc) return;\n          try {\n            await pc.setRemoteDescription(new RTCSessionDescription(sdp));\n            const answer = await pc.createAnswer();\n            await pc.setLocalDescription(answer);\n            socket.emit(\"answer\", {\n              target: sender,\n              sdp: answer\n            });\n          } catch (error) {\n            console.error(\"❌ Error al procesar oferta:\", error);\n          }\n        });\n\n        // Manejar respuestas de WebRTC\n        socket.on(\"answer\", async ({\n          sender,\n          sdp\n        }) => {\n          console.log(\"📩 Recibida respuesta de:\", sender);\n          if (!pc) return;\n          try {\n            await pc.setRemoteDescription(new RTCSessionDescription(sdp));\n          } catch (error) {\n            console.error(\"❌ Error al procesar respuesta:\", error);\n          }\n        });\n\n        // Manejar candidatos ICE\n        socket.on(\"ice-candidate\", async ({\n          sender,\n          candidate\n        }) => {\n          console.log(\"📡 Recibido candidato ICE de:\", sender);\n          if (!pc) return;\n          try {\n            await pc.addIceCandidate(new RTCIceCandidate(candidate));\n          } catch (error) {\n            console.error(\"❌ Error al agregar candidato ICE:\", error);\n          }\n        });\n      } catch (err) {\n        console.error(\"❌ No se pudo acceder a la cámara/micrófono:\", err);\n        setError(\"No se pudo acceder a la cámara/micrófono. Revisa los permisos.\");\n      }\n    }\n    startMedia();\n    return () => {\n      console.log(\"🔄 Limpiando eventos de WebRTC...\");\n      socket.off(\"users-list\");\n      socket.off(\"user-connected\");\n      socket.off(\"user-disconnected\");\n      socket.off(\"offer\");\n      socket.off(\"answer\");\n      socket.off(\"ice-candidate\");\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center h-screen bg-gray-900 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl mb-4\",\n      children: \"Videollamada\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83D\\uDCF7 C\\xE1mara activada...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: localVideoRef,\n        autoPlay: true,\n        playsInline: true,\n        className: \"w-1/3 border-2 border-white rounded-md shadow-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: remoteVideoRef,\n        autoPlay: true,\n        playsInline: true,\n        className: \"w-1/3 border-2 border-white rounded-md shadow-lg mt-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n};\n_s(VideoCall, \"7q+Z+dwszn3OIgOgY4oPx0IfIeI=\");\n_c = VideoCall;\nexport default VideoCall;\nvar _c;\n$RefreshReg$(_c, \"VideoCall\");","map":{"version":3,"names":["React","useEffect","useRef","useState","socket","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoCall","_s","localVideoRef","remoteVideoRef","users","setUsers","peerConnection","setPeerConnection","error","setError","startMedia","console","log","navigator","mediaDevices","getUserMedia","stream","video","audio","current","srcObject","pc","RTCPeerConnection","iceServers","urls","getTracks","forEach","track","addTrack","onicecandidate","event","candidate","emit","target","ontrack","streams","on","userList","filter","id","userId","prev","sender","sdp","setRemoteDescription","RTCSessionDescription","answer","createAnswer","setLocalDescription","addIceCandidate","RTCIceCandidate","err","off","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline","_c","$RefreshReg$"],"sources":["E:/Proyectos/VideoCall/frontend/src/pages/VideoCall.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport socket from \"../socket\";\r\n\r\nconst VideoCall = () => {\r\n    const localVideoRef = useRef(null);\r\n    const remoteVideoRef = useRef(null);\r\n    const [users, setUsers] = useState([]);\r\n    const [peerConnection, setPeerConnection] = useState(null);\r\n    const [error, setError] = useState(null); // Estado para manejar errores\r\n\r\n    useEffect(() => {\r\n        async function startMedia() {\r\n            try {\r\n                console.log(\"🔄 Iniciando solicitud de acceso a cámara/micrófono...\");\r\n\r\n                // Verificar compatibilidad con WebRTC\r\n                if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\r\n                    console.error(\"❌ Este navegador no soporta acceso a la cámara/micrófono.\");\r\n                    setError(\"Este navegador no soporta acceso a la cámara/micrófono.\");\r\n                    return;\r\n                }\r\n\r\n                // Obtener acceso a la cámara y micrófono\r\n                const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n                if (localVideoRef.current) {\r\n                    localVideoRef.current.srcObject = stream;\r\n                }\r\n\r\n                console.log(\"✅ Cámara y micrófono activados.\");\r\n\r\n                // Crear conexión WebRTC\r\n                const pc = new RTCPeerConnection({\r\n                    iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\r\n                });\r\n\r\n                stream.getTracks().forEach(track => pc.addTrack(track, stream));\r\n                setPeerConnection(pc);\r\n\r\n                // Enviar candidatos ICE\r\n                pc.onicecandidate = (event) => {\r\n                    if (event.candidate) {\r\n                        console.log(\"📡 Enviando candidato ICE:\", event.candidate);\r\n                        socket.emit(\"ice-candidate\", { target: users[0], candidate: event.candidate });\r\n                    }\r\n                };\r\n\r\n                // Recibir stream remoto\r\n                pc.ontrack = (event) => {\r\n                    console.log(\"📡 Recibiendo stream remoto...\");\r\n                    if (remoteVideoRef.current) {\r\n                        remoteVideoRef.current.srcObject = event.streams[0];\r\n                    }\r\n                };\r\n\r\n                // Manejar eventos de usuarios conectados\r\n                socket.on(\"users-list\", (userList) => {\r\n                    console.log(\"👥 Usuarios conectados:\", userList);\r\n                    setUsers(userList.filter((id) => id !== socket.id));\r\n                });\r\n\r\n                socket.on(\"user-connected\", (userId) => {\r\n                    console.log(\"🟢 Usuario conectado:\", userId);\r\n                    setUsers((prev) => [...prev, userId]);\r\n                });\r\n\r\n                socket.on(\"user-disconnected\", (userId) => {\r\n                    console.log(\"🔴 Usuario desconectado:\", userId);\r\n                    setUsers((prev) => prev.filter((id) => id !== userId));\r\n                });\r\n\r\n                // Manejar ofertas de WebRTC\r\n                socket.on(\"offer\", async ({ sender, sdp }) => {\r\n                    console.log(\"📩 Recibida oferta de:\", sender);\r\n                    if (!pc) return;\r\n                    try {\r\n                        await pc.setRemoteDescription(new RTCSessionDescription(sdp));\r\n                        const answer = await pc.createAnswer();\r\n                        await pc.setLocalDescription(answer);\r\n                        socket.emit(\"answer\", { target: sender, sdp: answer });\r\n                    } catch (error) {\r\n                        console.error(\"❌ Error al procesar oferta:\", error);\r\n                    }\r\n                });\r\n\r\n                // Manejar respuestas de WebRTC\r\n                socket.on(\"answer\", async ({ sender, sdp }) => {\r\n                    console.log(\"📩 Recibida respuesta de:\", sender);\r\n                    if (!pc) return;\r\n                    try {\r\n                        await pc.setRemoteDescription(new RTCSessionDescription(sdp));\r\n                    } catch (error) {\r\n                        console.error(\"❌ Error al procesar respuesta:\", error);\r\n                    }\r\n                });\r\n\r\n                // Manejar candidatos ICE\r\n                socket.on(\"ice-candidate\", async ({ sender, candidate }) => {\r\n                    console.log(\"📡 Recibido candidato ICE de:\", sender);\r\n                    if (!pc) return;\r\n                    try {\r\n                        await pc.addIceCandidate(new RTCIceCandidate(candidate));\r\n                    } catch (error) {\r\n                        console.error(\"❌ Error al agregar candidato ICE:\", error);\r\n                    }\r\n                });\r\n\r\n            } catch (err) {\r\n                console.error(\"❌ No se pudo acceder a la cámara/micrófono:\", err);\r\n                setError(\"No se pudo acceder a la cámara/micrófono. Revisa los permisos.\");\r\n            }\r\n        }\r\n\r\n        startMedia();\r\n\r\n        return () => {\r\n            console.log(\"🔄 Limpiando eventos de WebRTC...\");\r\n            socket.off(\"users-list\");\r\n            socket.off(\"user-connected\");\r\n            socket.off(\"user-disconnected\");\r\n            socket.off(\"offer\");\r\n            socket.off(\"answer\");\r\n            socket.off(\"ice-candidate\");\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center justify-center h-screen bg-gray-900 text-white\">\r\n            <h2 className=\"text-2xl mb-4\">Videollamada</h2>\r\n\r\n            {error ? (\r\n                <p className=\"text-red-500\">{error}</p>\r\n            ) : (\r\n                <>\r\n                    <p>📷 Cámara activada...</p>\r\n                    <video ref={localVideoRef} autoPlay playsInline className=\"w-1/3 border-2 border-white rounded-md shadow-lg\" />\r\n                    <video ref={remoteVideoRef} autoPlay playsInline className=\"w-1/3 border-2 border-white rounded-md shadow-lg mt-4\" />\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VideoCall;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}