{"ast":null,"code":"var _jsxFileName = \"E:\\\\Proyectos\\\\VideoCall\\\\frontend\\\\src\\\\pages\\\\VideoCall.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport socket from \"../socket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoCall = () => {\n  _s();\n  const localVideoRef = useRef(null);\n  const remoteVideoRef = useRef(null);\n  const [users, setUsers] = useState([]);\n  const [peerConnection, setPeerConnection] = useState(null);\n  const [error, setError] = useState(null); // Agregamos estado para manejar errores\n\n  useEffect(() => {\n    async function startMedia() {\n      try {\n        // Verificar compatibilidad con WebRTC\n        if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n          setError(\"Este navegador no soporta acceso a la cámara y micrófono.\");\n          return;\n        }\n\n        // Obtener acceso a la cámara y micrófono\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: true\n        });\n        if (localVideoRef.current) {\n          localVideoRef.current.srcObject = stream;\n        }\n\n        // Crear conexión WebRTC\n        const pc = new RTCPeerConnection({\n          iceServers: [{\n            urls: \"stun:stun.l.google.com:19302\"\n          }]\n        });\n        stream.getTracks().forEach(track => pc.addTrack(track, stream));\n        setPeerConnection(pc);\n\n        // Enviar candidatos ICE\n        pc.onicecandidate = event => {\n          if (event.candidate) {\n            socket.emit(\"ice-candidate\", {\n              target: users[0],\n              candidate: event.candidate\n            });\n          }\n        };\n\n        // Recibir stream remoto\n        pc.ontrack = event => {\n          if (remoteVideoRef.current) {\n            remoteVideoRef.current.srcObject = event.streams[0];\n          }\n        };\n\n        // Manejar eventos de usuarios conectados\n        socket.on(\"users-list\", userList => {\n          setUsers(userList.filter(id => id !== socket.id));\n        });\n        socket.on(\"user-connected\", userId => {\n          setUsers(prev => [...prev, userId]);\n        });\n        socket.on(\"user-disconnected\", userId => {\n          setUsers(prev => prev.filter(id => id !== userId));\n        });\n\n        // Manejar ofertas de WebRTC\n        socket.on(\"offer\", async ({\n          sender,\n          sdp\n        }) => {\n          if (!pc) return;\n          await pc.setRemoteDescription(new RTCSessionDescription(sdp));\n          const answer = await pc.createAnswer();\n          await pc.setLocalDescription(answer);\n          socket.emit(\"answer\", {\n            target: sender,\n            sdp: answer\n          });\n        });\n\n        // Manejar respuestas de WebRTC\n        socket.on(\"answer\", async ({\n          sender,\n          sdp\n        }) => {\n          if (!pc) return;\n          await pc.setRemoteDescription(new RTCSessionDescription(sdp));\n        });\n\n        // Manejar candidatos ICE\n        socket.on(\"ice-candidate\", async ({\n          sender,\n          candidate\n        }) => {\n          if (!pc) return;\n          await pc.addIceCandidate(new RTCIceCandidate(candidate));\n        });\n      } catch (err) {\n        console.error(\"No se pudo acceder a la cámara/micrófono:\", err);\n        setError(\"No se pudo acceder a la cámara/micrófono. Revisa los permisos.\");\n      }\n    }\n    startMedia();\n    return () => {\n      socket.off(\"users-list\");\n      socket.off(\"user-connected\");\n      socket.off(\"user-disconnected\");\n      socket.off(\"offer\");\n      socket.off(\"answer\");\n      socket.off(\"ice-candidate\");\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center h-screen bg-gray-900 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl mb-4\",\n      children: \"Videollamada\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: localVideoRef,\n      autoPlay: true,\n      playsInline: true,\n      className: \"w-1/3 border-2 border-white rounded-md shadow-lg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: remoteVideoRef,\n      autoPlay: true,\n      playsInline: true,\n      className: \"w-1/3 border-2 border-white rounded-md shadow-lg mt-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n_s(VideoCall, \"7q+Z+dwszn3OIgOgY4oPx0IfIeI=\");\n_c = VideoCall;\nexport default VideoCall;\nvar _c;\n$RefreshReg$(_c, \"VideoCall\");","map":{"version":3,"names":["React","useEffect","useRef","useState","socket","jsxDEV","_jsxDEV","VideoCall","_s","localVideoRef","remoteVideoRef","users","setUsers","peerConnection","setPeerConnection","error","setError","startMedia","navigator","mediaDevices","getUserMedia","stream","video","audio","current","srcObject","pc","RTCPeerConnection","iceServers","urls","getTracks","forEach","track","addTrack","onicecandidate","event","candidate","emit","target","ontrack","streams","on","userList","filter","id","userId","prev","sender","sdp","setRemoteDescription","RTCSessionDescription","answer","createAnswer","setLocalDescription","addIceCandidate","RTCIceCandidate","err","console","off","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline","_c","$RefreshReg$"],"sources":["E:/Proyectos/VideoCall/frontend/src/pages/VideoCall.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport socket from \"../socket\";\r\n\r\nconst VideoCall = () => {\r\n    const localVideoRef = useRef(null);\r\n    const remoteVideoRef = useRef(null);\r\n    const [users, setUsers] = useState([]);\r\n    const [peerConnection, setPeerConnection] = useState(null);\r\n    const [error, setError] = useState(null); // Agregamos estado para manejar errores\r\n\r\n\r\n    useEffect(() => {\r\n      async function startMedia() {\r\n          try {\r\n              // Verificar compatibilidad con WebRTC\r\n              if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\r\n                  setError(\"Este navegador no soporta acceso a la cámara y micrófono.\");\r\n                  return;\r\n              }\r\n  \r\n              // Obtener acceso a la cámara y micrófono\r\n              const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n              if (localVideoRef.current) {\r\n                  localVideoRef.current.srcObject = stream;\r\n              }\r\n  \r\n              // Crear conexión WebRTC\r\n              const pc = new RTCPeerConnection({\r\n                  iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\r\n              });\r\n  \r\n              stream.getTracks().forEach(track => pc.addTrack(track, stream));\r\n              setPeerConnection(pc);\r\n  \r\n              // Enviar candidatos ICE\r\n              pc.onicecandidate = (event) => {\r\n                  if (event.candidate) {\r\n                      socket.emit(\"ice-candidate\", { target: users[0], candidate: event.candidate });\r\n                  }\r\n              };\r\n  \r\n              // Recibir stream remoto\r\n              pc.ontrack = (event) => {\r\n                  if (remoteVideoRef.current) {\r\n                      remoteVideoRef.current.srcObject = event.streams[0];\r\n                  }\r\n              };\r\n  \r\n              // Manejar eventos de usuarios conectados\r\n              socket.on(\"users-list\", (userList) => {\r\n                  setUsers(userList.filter((id) => id !== socket.id));\r\n              });\r\n  \r\n              socket.on(\"user-connected\", (userId) => {\r\n                  setUsers((prev) => [...prev, userId]);\r\n              });\r\n  \r\n              socket.on(\"user-disconnected\", (userId) => {\r\n                  setUsers((prev) => prev.filter((id) => id !== userId));\r\n              });\r\n  \r\n              // Manejar ofertas de WebRTC\r\n              socket.on(\"offer\", async ({ sender, sdp }) => {\r\n                  if (!pc) return;\r\n                  await pc.setRemoteDescription(new RTCSessionDescription(sdp));\r\n                  const answer = await pc.createAnswer();\r\n                  await pc.setLocalDescription(answer);\r\n                  socket.emit(\"answer\", { target: sender, sdp: answer });\r\n              });\r\n  \r\n              // Manejar respuestas de WebRTC\r\n              socket.on(\"answer\", async ({ sender, sdp }) => {\r\n                  if (!pc) return;\r\n                  await pc.setRemoteDescription(new RTCSessionDescription(sdp));\r\n              });\r\n  \r\n              // Manejar candidatos ICE\r\n              socket.on(\"ice-candidate\", async ({ sender, candidate }) => {\r\n                  if (!pc) return;\r\n                  await pc.addIceCandidate(new RTCIceCandidate(candidate));\r\n              });\r\n  \r\n          } catch (err) {\r\n              console.error(\"No se pudo acceder a la cámara/micrófono:\", err);\r\n              setError(\"No se pudo acceder a la cámara/micrófono. Revisa los permisos.\");\r\n          }\r\n      }\r\n  \r\n      startMedia();\r\n  \r\n      return () => {\r\n          socket.off(\"users-list\");\r\n          socket.off(\"user-connected\");\r\n          socket.off(\"user-disconnected\");\r\n          socket.off(\"offer\");\r\n          socket.off(\"answer\");\r\n          socket.off(\"ice-candidate\");\r\n      };\r\n    }, []);\r\n  \r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center justify-center h-screen bg-gray-900 text-white\">\r\n            <h2 className=\"text-2xl mb-4\">Videollamada</h2>\r\n            <video ref={localVideoRef} autoPlay playsInline className=\"w-1/3 border-2 border-white rounded-md shadow-lg\" />\r\n            <video ref={remoteVideoRef} autoPlay playsInline className=\"w-1/3 border-2 border-white rounded-md shadow-lg mt-4\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VideoCall;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}